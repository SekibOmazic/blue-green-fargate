AWSTemplateFormatVersion: 2010-09-09
Description: The CloudFormation template for the CodePipeline.

Parameters:
  ServiceName:
    Type: String
  GithubUserName:
    Type: String
  GithubRepo:
    Type: String
  GithubBranch:
    Type: String
    Default: main
  GithubOAuthToken:
    Type: String
    Description: OAuth-Token for GitHub-Access
  ContainerPort:
    Type: Number
    Default: 80

Resources:
  # Create an ECR Repository to store docker images
  Repository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ServiceName

  # Create an S3 Bucket to store build artifacts
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ["-", [!Ref ServiceName, !Ref "AWS::AccountId", "s3bucket"]]

  CodePipelineManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:PutObject*
            Resource: '*'

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns: 
        - !Ref CodePipelineManagedPolicy
      Policies:
        - PolicyName: CodeBuild
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                   - codebuild:StartBuild
                   - codebuild:BatchGetBuilds
                Resource:
                   - !GetAtt BuildProject.Arn
              - Effect: Allow
                Action: 
                   - "cloudformation:*"
                Resource: "*"
        - PolicyName: CodeDeploy   
          PolicyDocument:
            Version: 2012-10-17
            Statement:  
              - Effect: Allow
                Action: 
                   - "codedeploy:*"
                Resource: "*"  
        - PolicyName: ECS
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              # ECS Deployments
              - Effect: Allow
                Action: iam:PassRole
                Resource: '*'
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - ecs-tasks.amazonaws.com
              - Effect: Allow
                Action:
                  - ecs:DescribeTaskDefinition
                  - ecs:RegisterTaskDefinition
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:UpdateService
                Resource: '*'

  CloudFormationServiceRole:
    # This Role will actually do all of the heavy lifting and resouce creation
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: CloudformationAccess
          PolicyDocument:
            # This policy defines what the users can actually do with Cloudformation
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"                  

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Name: !Sub ${GithubRepo}
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: source
              Configuration:
                Repo: !Ref GithubRepo
                Branch: !Ref GithubBranch
                Owner: !Ref GithubUserName
                OAuthToken: !Ref GithubOAuthToken
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: source
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BuildProject
              OutputArtifacts:
                - Name: build
              RunOrder: 1
        - Name: CreateChangeSet
          Actions:
            - Name: CreateChangeSet
              InputArtifacts:
                - Name: build
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                StackName: !Ref ServiceName
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                ChangeSetName: update
                RoleArn: !GetAtt  CloudFormationServiceRole.Arn
                # Pass parameter values to cf-template.yaml for deployment
                ParameterOverrides: !Sub |
                  {
                    "ImageURI" : { "Fn::GetParam" : ["build", "imageDetail.json", "ImageURI"] },
                    "EcrRepoName":  "${ServiceName}",
                    "ContainerPort": "${ContainerPort}"
                  }
                TemplatePath: source::cloudformation/infrastructure/cf-template.yaml

        - Name: ExecuteChangeSet
          Actions:
            - Name: ExecuteChangeSet
              InputArtifacts:
                - Name: build
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                StackName: !Ref ServiceName
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                ChangeSetName: update
              RunOrder: 1
  
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource:
                  - !Sub arn:${AWS::Partition}:ecr:${AWS::Region}:${AWS::AccountId}:repository/${GithubRepo}
                  - !Sub arn:${AWS::Partition}:ecr:${AWS::Region}:${AWS::AccountId}:repository/node
              - Effect: Allow
                Action: ecr:GetAuthorizationToken
                Resource: "*"
              - Effect: "Allow"  
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
              - Effect: Allow  
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                Resource:
                  - !GetAtt ArtifactBucket.Arn
                  - !Sub ${ArtifactBucket.Arn}/*
  
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE  
      Environment:  
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ECR_REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
      Name: !Sub ${GithubRepo}-ci
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        # This file (buildspec.yaml in source code) contains commands to Create and Push a docker image to the ECR_REPOSITORY_URI
        BuildSpec: cloudformation/cicd/buildspec.yaml
      Cache:
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
          - LOCAL_SOURCE_CACHE 
        Type: LOCAL 
      TimeoutInMinutes: 15
      Tags:
        - Key: Name
          Value: !Sub ${GithubRepo}   
