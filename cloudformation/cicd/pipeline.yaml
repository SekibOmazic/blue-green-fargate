AWSTemplateFormatVersion: 2010-09-09
Description: The CloudFormation template for the CodePipeline.

Parameters:
  GithubUsername:
    Type: String

  GithubRepo:
    Type: String

  GithubBranch:
    Type: String
    Default: main

  GithubOAuthToken:
    Type: String
    Description: OAuth-Token for GitHub-Access

  DomainName:
    Type: String
    Description: service domain name. E.g. api.my-domain.com

  HostedZoneId:
    Description: The hosted zone that contains the top-level domain
    Type: AWS::Route53::HostedZone::Id
    # Default: "Z05489150143R718AB2VF" # taken from Route53 for the domain

  SslCertificateArn:
    Description: ARN to the certificate in us-east-1 valid for the hosting domain
    Type: String
    # Default: "arn:aws:acm:eu-central-1:123456789012:certificate/22220000-aaaa-bbbb-cccc-ddddeeeeffff" # taken from ACM for the certificate

Resources:
  # Create an ECR Repository to store docker images
  Repository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref GithubRepo

  # Create an S3 Bucket to store build artifacts
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ["-", [!Ref GithubRepo, !Ref "AWS::AccountId", "s3bucket"]]

  # Create Access Role for CodePipeLine
  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # Create Access Role for CodeBuild
  CodeBuildExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # Create Access Role for Cloudformation
  CloudformationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # Create the BuildProject with required Build information
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ECR_REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
      Name: !Join ["-", [!Ref GithubRepo, !Ref "AWS::AccountId", "BuildProject"]]
      ServiceRole: !Ref CodeBuildExecutionRole
      Source:
        Type: CODEPIPELINE
        # This file (buildspec.yaml in source code) contains commands to Create and Push a docker image to the ECR_REPOSITORY_URI
        BuildSpec: cloudformation/cicd/buildspec.yaml

  # Create CodePipeline with 3 stages (Source, Build and Deploy)
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: S3Bucket
    Properties:
      ArtifactStore:
        Location: !Join ["-", [!Ref GithubRepo, !Ref "AWS::AccountId", "s3bucket"]]
        Type: S3
      Name: !Join ["-", [!Ref GithubRepo, "pipeline"]]
      RestartExecutionOnUpdate: False
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn

      Stages:
        # Download source code from Github Repo to source-output-artifacts path in S3 Bucket
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Repo: !Ref GithubRepo
                Branch: !Ref GithubBranch
                Owner: !Ref GithubUsername
                OAuthToken: !Ref GithubOAuthToken
              RunOrder: 1
              OutputArtifacts:
                - Name: source-output-artifacts

        # Build the project using the BuildProject and Output build artifacts to build-output-artifacts path in S3 Bucket
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: build-output-artifacts
              InputArtifacts:
                - Name: source-output-artifacts
              Configuration:
                ProjectName: !Ref BuildProject
              RunOrder: 1

        - Name: CreateChangeSet
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: source-output-artifacts
                - Name: build-output-artifacts
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                StackName: !Ref GithubRepo
                ChangeSetName: update
                RoleArn: !GetAtt  CloudformationExecutionRole.Arn
                ParameterOverrides: !Sub |
                  {
                    "ImageURI" : { "Fn::GetParam" : ["build-output-artifacts", "imageDetail.json", "ImageURI"] },
                    "EcrRepoName": "${GithubRepo}",
                    "DomainName": "${DomainName}",
                    "SslCertificateArn": "${SslCertificateArn}",
                    "HostedZoneId": "${HostedZoneId}"
                  }
                TemplatePath: source-output-artifacts::cloudformation/infrastructure/cf-template.yaml

        - Name: ExecuteChangeSet
          Actions:
            - Name: ExecuteChangeSet
              InputArtifacts:
                - Name: source-output-artifacts
                - Name: build-output-artifacts
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
                StackName: !Ref GithubRepo
                ChangeSetName: update
              RunOrder: 1